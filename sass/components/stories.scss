.story {
  position: relative;
  max-width: 80%;
  margin: 2rem auto;
  z-index: 100;
  box-shadow: 0 3rem 6rem rgba(black, .2);
  background-color: rgba(250, 250, 250, .6);
  border-radius: 3px;
  padding: 6rem;
  // clip-path: polygon(10% 0, 100% 0, 90% 100%, 0 100%);
  transform: skew(-10deg);
  flex-grow: 2;

  @include respond(phone) {
    display: flex;
    flex-direction: column;
    align-items: center;
    transform: skew(-2deg)
  }
  

  &:hover >  figure > img {
    filter: blur(2px);
    transition: all .4s ease-in-out;
    transform: translateX(-3.5rem) scale(1);
    
  }

  &:hover > figure > div > h2 {
    transition: all .4s ease-in-out;
    opacity: 1;
    top: 50%;
  }

  &__text {
    transform: skew(10deg);

    @include respond(phone) {
      transform: skew(2deg);
    }
  }

  &__shape {
    float: left;
    width: 15rem;
    height: 15rem;
    overflow: hidden;
    clip-path: circle(50% at 50% 50%);

    //define the outline shape of the circle define the size of the circle and position of the center. First number is the radius so 50%. THen the centre is defined 50% from the x and 50% from the y axis:
    //Important this only works if the element is floated.And have defined dimensions
    shape-outside: circle(50% at 50% 50%);

    //floated elements should not be moved around with margins or paddings but rather with transform
    // transform: translateX(-1.5rem);
    transform: translateX(-1.5rem) skew(10deg);

    @include respond(phone) {
      transform: skew(2deg);
      margin-bottom: 3rem;
      width: 18rem;
    height: 18rem;
    }
    

    

    &--image {
      height: 100%;
      transform: translateX(-6rem) scale(1.4);
    }

    &--name {
      display: inline-block;
      position: absolute;
      text-align: center;
      top: 65%;
      left: 50%;
      transform: translate(-50%, -50%);
      color: white;
      opacity: 0;
      
    }
  }
}

.bg-video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  opacity: .2;

  &__content {
    width: 100%;
    height: 100%;

    //allows you to cover a section with an object while keeping its aspect rations
    object-fit: cover;
  }

  
}